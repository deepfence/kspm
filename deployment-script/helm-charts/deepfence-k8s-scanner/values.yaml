# Management Console URL. Example: 22.33.44.55, deepfence.customer.com
managementConsoleUrl: ""
managementConsolePort: 443

# Auth: Get deepfence api key from UI -> Settings -> User Management
deepfenceKey: ""

# Set custom name for the cluster and hostname prefix for agent vm's to easily identify in Deepfence UI.
# Example: prod-cluster or dev1-cluster
# It will be suffixed with hostname - prod-cluster-aks-agentpool-123456-vmss000001
clusterName: ""

registry:
  name: "https://index.docker.io/v1/"
  # Set docker hub username and password provided by Deepfence
  # This will create a secret called "deepfence-docker-secret"
  username: ""
  password: ""
  # If kubernetes secret is already defined externally, change following value to false
  # https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  createRegistrySecret: true

image:
  name: deepfenceio/k8s-scanner
  tag: 1.0.0
  pullPolicy: Always
  pullSecretName: k8s-scanner-registry-secret

resources:
  requests:
    cpu: 150m
    memory: 50Mi
  limits:
    cpu: 1000m
    memory: 1Gi

debug: true

nodeSelector: {"kubernetes.io/os": "linux"}

tolerations:
- operator: "Exists"
  effect: "NoSchedule"
- operator: "Exists"
  effect: "NoExecute"

affinity: {}

serviceAccount:
  # Annotations to add to the service account
  annotations: {}
  name: "deepfence-k8s-scanner"

nameOverride: ""
fullnameOverride: ""